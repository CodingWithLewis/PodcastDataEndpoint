WEBVTT
Kind: captions
Language: en

00:00:00.033 --> 00:00:05.638
I built three trading bots to trade stock
with $10,000 of my own money.

00:00:05.705 --> 00:00:12.545
One safe, one risky,
and one just absolutely insane.

00:00:12.612 --> 00:00:15.782
In today's video, I'm going to show you
the process of how I build these bots.

00:00:15.815 --> 00:00:21.588
All the technology I used
and the results of giving it $10,000.

00:00:21.654 --> 00:00:23.790
Well,
if you're new here, my name is Lewis,

00:00:23.790 --> 00:00:27.527
and I'm on a mission to inspire developers
and tech enthusiasts.

00:00:27.627 --> 00:00:30.330
Let's go.

00:00:30.330 --> 00:00:31.731
Oh, okay.

00:00:31.731 --> 00:00:35.402
So I would never consider myself
a finance guy, but,

00:00:35.635 --> 00:00:37.670
I mean, come on, How hard can it be?

00:00:37.670 --> 00:00:41.775
Buy high, sell low.

00:00:41.875 --> 00:00:45.345
But surprise, surprise,
it's a lot more complicated than that.

00:00:45.478 --> 00:00:48.681
So I read up on Trading Strategies
in a short period of time.

00:00:48.715 --> 00:00:51.718
How could I possibly make more money
than I put in?

00:00:51.818 --> 00:00:54.854
And from my initial research,
no one really knows.

00:00:54.854 --> 00:00:58.558
So you just kind of make it up on the spot
until you get so rich

00:00:58.625 --> 00:01:00.160
you can wear a suit to work.

00:01:00.160 --> 00:01:05.465
But here's
how I'm going to make my fortune.

00:01:05.532 --> 00:01:08.568
I'm going to create three trading bots
that all have different strategies

00:01:08.568 --> 00:01:12.572
going from fairly safe all the way
to basically burning my money away.

00:01:12.672 --> 00:01:15.642
The first one is a mix of momentum
trading and value trading.

00:01:15.642 --> 00:01:19.145
It makes decisions
on a preset amount of safe stocks and buys

00:01:19.312 --> 00:01:22.348
or sells, depending on how the stock
is moving on average.

00:01:22.482 --> 00:01:25.418
The second bot scans
for news articles on a company.

00:01:25.418 --> 00:01:29.322
If the news is good,
we buy or of a spot and we own that stock,

00:01:29.322 --> 00:01:32.926
we immediately sell the third buy.

00:01:33.026 --> 00:01:36.029
I can't even believe I'm doing this.

00:01:36.129 --> 00:01:38.898
Selects
a random stock out of every stock listed.

00:01:38.898 --> 00:01:42.102
Grabs the latest news article
about the stock that was picked and uses

00:01:42.302 --> 00:01:45.305
AI to determine what Taylor Swift
lyric is the most related.

00:01:45.305 --> 00:01:47.707
If the lyric is happy,
we put half the money in.

00:01:47.707 --> 00:01:50.944
When we hold that stock, we continue
grabbing news articles about the stock

00:01:50.944 --> 00:01:54.414
and if the lyrics match
a negative sentiment, we sell everything.

00:01:54.614 --> 00:01:58.184
Swift Trade 1.0.

00:01:58.284 --> 00:01:59.919
This is what I do for a living.

00:01:59.919 --> 00:02:02.922
You're probably wondering
who would be so stupid to do such a thing.

00:02:02.922 --> 00:02:06.726
While the sponsor of today's video
data stocks is thinking the same thing.

00:02:06.793 --> 00:02:10.063
I'm using data stocks Astro
DB to power this application,

00:02:10.063 --> 00:02:13.166
and when it comes to speed,
it's 100% needed When working

00:02:13.166 --> 00:02:16.870
with databases with vector values
built on top of Cassandra Astra.

00:02:16.870 --> 00:02:19.139
DB helps you scale your application

00:02:19.139 --> 00:02:22.876
without the worries of scaling,
slowing you down with global scale,

00:02:22.876 --> 00:02:27.247
with serverless architecture, enterprise
level security, and no vendor lock in.

00:02:27.280 --> 00:02:28.748
You can literally create a database

00:02:28.748 --> 00:02:32.318
and just a couple of clicks
and it has a bunch of SDK supported

00:02:32.418 --> 00:02:35.555
for Python Node Go or even just a C ally.

00:02:35.588 --> 00:02:38.591
So if you're familiar with Cassandra,
then no explanation needed.

00:02:38.591 --> 00:02:42.162
But if you're like me and don't understand
Cassandra, it's still so simple

00:02:42.162 --> 00:02:44.564
to connect your application
and get something up and running.

00:02:44.564 --> 00:02:45.131
In minutes.

00:02:45.131 --> 00:02:47.467
I create a Chrome extension
that lets you talk to YouTube

00:02:47.467 --> 00:02:51.404
videos easily with data stacks
primarily powering the entire thing.

00:02:51.404 --> 00:02:53.840
And it was so easy to just
build an application quickly

00:02:53.840 --> 00:02:57.010
that require complex components
like a vector database.

00:02:57.010 --> 00:02:59.946
It's also easy to include
in your existing projects.

00:02:59.946 --> 00:03:01.381
Create a Cassandra vector search

00:03:01.381 --> 00:03:04.417
for a small business in your area
and have a for facing chat.

00:03:04.417 --> 00:03:06.352
It's actually shockingly simple.

00:03:06.352 --> 00:03:10.857
Leaders in every industry are using data
stacks with Astra DB to power their A.I.

00:03:10.857 --> 00:03:14.894
applications, and you can too
with their extremely generous free tier.

00:03:14.894 --> 00:03:15.361
Thanks data

00:03:15.361 --> 00:03:19.699
stacks for enabling my reckless behavior
by being the sponsor of today's video.

00:03:19.699 --> 00:03:22.902
If you're building an AI app
or want to build an AI app, please

00:03:22.902 --> 00:03:24.571
click the link in the description below

00:03:24.571 --> 00:03:31.144
to learn more about how you can use
data stacks in your next project.

00:03:31.211 --> 00:03:34.347
So here's how the first trading bot works
in detail.

00:03:34.347 --> 00:03:34.981
Every minute

00:03:34.981 --> 00:03:38.885
the bot looks at a predefined set of safe
stocks, then looks at the current price.

00:03:38.918 --> 00:03:41.221
The average price
within the last 15 minutes

00:03:41.221 --> 00:03:45.358
and the p e ratio, which is the companies
earnings to stock price ratio.

00:03:45.425 --> 00:03:49.429
If a stock is above the average price and
the p e ratio is lower than the average,

00:03:49.529 --> 00:03:53.099
we buy, we then check to see
if the moving average is on the way down.

00:03:53.199 --> 00:03:56.102
If it is, we sell
and then rinse and repeat.

00:03:56.102 --> 00:03:58.605
I'm of course
using Python for all three of these bots

00:03:58.605 --> 00:04:01.374
and unfortunately
I'm using interactive brokers,

00:04:01.374 --> 00:04:03.776
which is the only option I have
as a Canadian.

00:04:03.776 --> 00:04:05.111
Like really?

00:04:05.111 --> 00:04:08.348
Also,
the interactive brokers API is really bad,

00:04:08.348 --> 00:04:10.216
but thanks to the magic of open source,

00:04:10.216 --> 00:04:12.919
someone made a package
that makes it a little bit more bearable.

00:04:12.919 --> 00:04:15.421
What's funny
is that the least exciting bot to make

00:04:15.421 --> 00:04:17.090
is actually the hardest to make.

00:04:17.090 --> 00:04:20.426
There's a lot of technical
mathematical finance jargon

00:04:20.426 --> 00:04:24.230
that I just don't really care about, so
I have to look it up, how to implement it.

00:04:24.330 --> 00:04:30.436
You know,

00:04:30.536 --> 00:04:31.404
so when you're building one

00:04:31.404 --> 00:04:34.407
of these bots, the first thing that you do
is you back test.

00:04:34.407 --> 00:04:36.409
Backtesting
is where you take your strategy

00:04:36.409 --> 00:04:38.878
and see how it performs
on historical data.

00:04:38.878 --> 00:04:41.114
In Python,
there's a framework I'm using called Back

00:04:41.114 --> 00:04:44.851
Trader that lets me implement my strategy
and then use it against historical data.

00:04:44.984 --> 00:04:48.054
And since this is only going to be less
than a week, I'm going to only get

00:04:48.054 --> 00:04:55.595
the last couple of months of data
from a set of stocks

00:04:55.662 --> 00:04:58.731
that I spent so long on this at.

00:04:58.731 --> 00:04:59.632
Seriously ridiculous.

00:04:59.632 --> 00:05:04.070
So let's test it.

00:05:04.170 --> 00:05:05.972
Okay.

00:05:05.972 --> 00:05:07.607
Looks like we need some improvements.

00:05:07.607 --> 00:05:09.809
Sometimes it's
just the numbers that need altered.

00:05:09.809 --> 00:05:13.713
So a lot of these backtesting libraries
let you optimize these numbers by running

00:05:13.713 --> 00:05:16.716
them all in different combinations
and then picking out the best.

00:05:16.849 --> 00:05:19.819
So let's optimize 25 different periods.

00:05:19.819 --> 00:05:24.490
30 different overbought thresholds
and three different oversold thresholds.

00:05:24.590 --> 00:05:28.961
That means that we're testing over 22,500
different combinations.

00:05:29.062 --> 00:05:35.501
Let's get started.

00:05:35.601 --> 00:05:36.836
So for reference,

00:05:36.836 --> 00:05:39.872
I have 24 different cores on my computer

00:05:39.872 --> 00:05:43.743
and use them all in parallel
to get this running as fast as possible.

00:05:43.743 --> 00:05:47.814
It was seriously so long and it took over
25 minutes to run with all of these.

00:05:47.814 --> 00:05:49.115
So insane.

00:05:49.115 --> 00:05:51.217
And the worst part is that the best return

00:05:51.217 --> 00:05:55.521
I got was like $23,
but that's $23 doing nothing.

00:05:55.521 --> 00:05:57.757
So I'll do it with these parameters right
here.

00:05:57.757 --> 00:06:00.893
Usually with save or stocks,
you plan on selling in like a year

00:06:00.893 --> 00:06:03.429
or ten years
by instead I'm doing in a week.

00:06:03.429 --> 00:06:06.566
So honestly, $23 honestly might be a win.

00:06:06.599 --> 00:06:15.308
Let's just convert it into the interactive
brokers code and then run it.

00:06:15.375 --> 00:06:15.875
The second

00:06:15.875 --> 00:06:19.245
bar scans for news articles on companies
and the news is good.

00:06:19.278 --> 00:06:22.682
We look up the company
that it may be related to and then we buy.

00:06:22.782 --> 00:06:25.785
If it's bad and we own that stock,
we immediately sell.

00:06:25.785 --> 00:06:26.919
And this is how we can test.

00:06:26.919 --> 00:06:31.057
How does the news affect the stock market?

00:06:31.124 --> 00:06:34.127
Something I wasn't expecting was
how closed

00:06:34.127 --> 00:06:37.830
all information is basically everywhere
after the whole Twitter

00:06:37.830 --> 00:06:41.401
and Reddit API situation
everywhere is doing it now,

00:06:41.567 --> 00:06:46.038
so it looks like I'm forking up
some more cash.

00:06:46.139 --> 00:06:47.940
First, I downloaded the list of stocks

00:06:47.940 --> 00:06:51.377
on NASDAQ and New York Stock Exchange.

00:06:51.477 --> 00:06:54.814
I used to open again
to generate a description for each stock.

00:06:54.947 --> 00:06:58.384
Then embed this description
so I can vector, search it later,

00:06:58.451 --> 00:07:01.921
upload to Astra and we're good to go easy.

00:07:01.988 --> 00:07:03.423
All right, let's test it out.

00:07:03.423 --> 00:07:07.560
Who is ten?

00:07:07.627 --> 00:07:08.094
Awesome.

00:07:08.094 --> 00:07:09.262
So it seems to be working.

00:07:09.262 --> 00:07:12.632
Coding with Lewis builds
awesome trading boss with AI.

00:07:12.698 --> 00:07:14.167
Okay, cool.

00:07:14.167 --> 00:07:17.136
Then I plugged in and use API
so I can scan for news

00:07:17.136 --> 00:07:21.908
and identify what stock is likely going to
be talked about or affected.

00:07:21.974 --> 00:07:24.043
Now the back trading strategy,

00:07:24.043 --> 00:07:25.611
this one is going to be
a little bit more tough

00:07:25.611 --> 00:07:29.949
considering there's a whole bunch of data
outside of just the stock itself.

00:07:29.982 --> 00:07:32.485
Also,
I don't want to use any more API credits.

00:07:32.485 --> 00:07:35.455
It was already expensive as it is,
and I'm pretty much running out.

00:07:35.455 --> 00:07:37.156
So I'll write a script
to give me the date.

00:07:37.156 --> 00:07:40.526
Headline sentiment
and stock ticker is affiliated with.

00:07:40.560 --> 00:07:42.161
I just got the NVIDIA 49

00:07:42.161 --> 00:07:45.731
and it's really coming in clutch right now
with a machine learning aspect of it.

00:07:45.731 --> 00:07:50.102
And just because I'm curious, I'm
speaking to the final results here, 655

00:07:50.102 --> 00:07:54.574
positive articles,
300 neutrals and 550 negatives.

00:07:54.774 --> 00:07:56.709
Wow. Bummer.

00:07:56.709 --> 00:07:57.410
All right.

00:07:57.410 --> 00:08:01.647
This testing shouldn't be too hard.

00:08:01.714 --> 00:08:03.115
So it was pretty hard.

00:08:03.115 --> 00:08:06.452
So I have this set up here
where I can just put in a stock ticker

00:08:06.452 --> 00:08:09.255
and I'll use a sentiment analysis
based off of what I've done.

00:08:09.255 --> 00:08:11.491
I'll just do s box like Starbucks.

00:08:11.491 --> 00:08:14.460
It's actually funny
because Starbucks did really well lately,

00:08:14.460 --> 00:08:17.497
so it was climbed up
after a massive thing.

00:08:17.497 --> 00:08:19.665
Which insane? $102.

00:08:19.665 --> 00:08:22.702
So imagine if five days later I sold it.

00:08:22.735 --> 00:08:26.072
Let's try Tesla. I'd be a crazy one here.

00:08:26.138 --> 00:08:26.606
Okay.

00:08:26.606 --> 00:08:29.041
Even there you make money and do.

00:08:29.041 --> 00:08:29.742
Oh, wow.

00:08:29.742 --> 00:08:32.278
That's actually a crazy, crazy thing.

00:08:32.278 --> 00:08:36.215
I mean, to be fair, Elon
is always getting himself into some crap.

00:08:36.249 --> 00:08:37.483
Absolutely insane.

00:08:37.483 --> 00:08:40.920
Okay, let's convert this into interactive
broker code, and we're off

00:08:40.920 --> 00:08:48.728
to the races.

00:08:48.794 --> 00:08:49.862
Here's what we have to do.

00:08:49.862 --> 00:08:53.933
We select a random stock at every stock
listed using the same news API.

00:08:53.933 --> 00:08:56.702
Like last time we grab the five
most recent articles.

00:08:56.702 --> 00:09:00.439
We embed the articles and have data stocks
match out with the Taylor Swift lyric

00:09:00.439 --> 00:09:01.741
that relates to it the most.

00:09:01.741 --> 00:09:04.810
We then determine
if this lyric is positive or negative.

00:09:04.911 --> 00:09:10.349
If it's positive, we buy as much stock
as we can, otherwise it's time to sell.

00:09:10.416 --> 00:09:14.854
And I can't even believe
that we're doing this. Buy

00:09:14.921 --> 00:09:21.894
less, build

00:09:21.961 --> 00:09:23.362
First Less Locked Down.

00:09:23.362 --> 00:09:24.697
The Taylor Swift Lyrics.

00:09:24.697 --> 00:09:29.068
This one was surprisingly hard to find,
but Alisal or a dash of data

00:09:29.068 --> 00:09:32.638
provided it all on GitHub
and it only has 17 stars.

00:09:32.738 --> 00:09:34.140
An absolute legend.

00:09:34.140 --> 00:09:37.443
She literally has no idea
how much she's just helping you right now.

00:09:37.543 --> 00:09:40.313
Now separate all the lines of each lyric.

00:09:40.313 --> 00:09:43.716
For further reference for myself,
I'll add what album and song there from

00:09:43.983 --> 00:09:45.351
now to save herself some time.

00:09:45.351 --> 00:09:48.654
We can just do the sentiment analysis
on every single lyric now

00:09:48.654 --> 00:09:50.957
so we can save it
and ask her to be in bed.

00:09:50.957 --> 00:09:53.159
The lyrics and save to a new column

00:09:53.159 --> 00:09:56.262
and push up in batches
to ask her to be an actor.

00:09:56.262 --> 00:09:58.998
A first test.

00:09:58.998 --> 00:09:59.665
Awesome.

00:09:59.665 --> 00:10:02.735
Grab her existing list of stocks,
set up a function that pick one out

00:10:02.735 --> 00:10:06.906
random so I can grab and use data
from and good news pun intended

00:10:06.973 --> 00:10:10.676
is that we already have
the news API set up so we can just reuse

00:10:10.676 --> 00:10:11.911
a lot of the functions there.

00:10:11.911 --> 00:10:13.813
Now let's get some back test started.

00:10:13.813 --> 00:10:16.449
How I tested
this was similar to the new sentiment,

00:10:16.449 --> 00:10:19.852
but it's a bit harder
considering us all random sometimes.

00:10:19.852 --> 00:10:22.221
It did really well, sometimes it didn't.

00:10:22.221 --> 00:10:24.724
And there's a thousand of stocks
available to choose from.

00:10:24.724 --> 00:10:27.093
So I'm thinking
I'm satisfied with my testing.

00:10:27.093 --> 00:10:33.733
Let's just convert to interactive brokers
code and call it a day.

00:10:33.799 --> 00:10:36.035
So it's the next day.

00:10:36.035 --> 00:10:40.940
I have all three bots here
all ready to go.

00:10:41.040 --> 00:10:43.643
Can I press the button?

00:10:43.643 --> 00:10:53.452
Here we go.

00:10:53.552 --> 00:11:00.493
Oh, Mid-Wicket.

00:11:00.593 --> 00:11:21.881
Oh. Oh, oh.

00:11:21.947 --> 00:11:24.583
So I was only able to run them
for about three

00:11:24.583 --> 00:11:28.120
or four days because I had so many issues
when I actually deploy that.

00:11:28.120 --> 00:11:29.689
But more on that later.

00:11:29.689 --> 00:11:31.857
For now, let's get into the results.

00:11:31.857 --> 00:11:34.660
So for bot one, only
two stocks were purchased.

00:11:34.660 --> 00:11:37.496
Duke Energy was bought
the last day of trading, 16

00:11:37.496 --> 00:11:43.669
shares at $90.09,
but a total of $1,441.44.

00:11:43.669 --> 00:11:48.574
We then sold like 2 hours
later for $89.66 at a loss.

00:11:48.574 --> 00:11:53.145
So with this stock,
we ended up losing $6.88 with Mara.

00:11:53.145 --> 00:11:56.849
We ended up buying 24 shares at $9.38

00:11:56.849 --> 00:12:00.519
totaling to $225.24.

00:12:00.519 --> 00:12:04.290
We then sold that $10.22, meaning
we made a profit

00:12:04.323 --> 00:12:07.560
of $20.16 combined both together.

00:12:07.560 --> 00:12:10.362
And we actually made $13.28.

00:12:10.362 --> 00:12:12.031
I mean,
I wasn't really going to be surprised

00:12:12.031 --> 00:12:13.232
that bought number one wasn't

00:12:13.232 --> 00:12:17.203
going to cause significant loss or gain,
but it was fun to do either way.

00:12:17.203 --> 00:12:22.808
We bought over nine stocks, GameStop,
we bought 22 shares at $12.76

00:12:22.808 --> 00:12:28.514
and then sold at $13.23,
meaning we made a profit of $10.15.

00:12:28.514 --> 00:12:29.381
The Grinder app.

00:12:29.381 --> 00:12:33.385
We bought 46 shares at $6.14
and then sold at

00:12:33.385 --> 00:12:38.457
$6.76, giving us a profit of $28.29.

00:12:38.457 --> 00:12:39.391
Take-Two Interactive.

00:12:39.391 --> 00:12:45.030
We bought only one share, $153.94,
and then sold for $154.

00:12:45.164 --> 00:12:48.167
This was a last minute trade,
so we only made a $0.06 profit.

00:12:48.167 --> 00:12:52.071
The Insulet Corp, we bought one
share at $170.05

00:12:52.071 --> 00:12:55.508
and sold for $174.26,

00:12:55.541 --> 00:12:59.612
giving us a profit of $4.22
Hudson Pacific Properties.

00:12:59.612 --> 00:13:03.048
We bought 50 shares for $5.63 and sold

00:13:03.115 --> 00:13:07.553
$5.73, giving us a $4.80 profit.

00:13:07.553 --> 00:13:11.290
AT&amp;T, we bought 18 shares at $15.56

00:13:11.290 --> 00:13:15.961
and sold for $15.78,
giving us a $3 and 90 $0.01 profit.

00:13:15.961 --> 00:13:16.729
Astra space.

00:13:16.729 --> 00:13:21.200
We bought 195
stocks at $1 and four for $0.08

00:13:21.300 --> 00:13:24.370
and then selling at $1 and four for $0.02.

00:13:24.436 --> 00:13:27.006
This means we got a loss at a dollar
and $0.33.

00:13:27.006 --> 00:13:30.509
Hudson Global
we bought 18 shares at $15.40

00:13:30.509 --> 00:13:35.881
and then sold at $15.47,
giving us a $1 and $26 profit.

00:13:35.881 --> 00:13:36.882
Molson Coors Beer.

00:13:36.882 --> 00:13:40.152
We bought four stocks at $59.65

00:13:40.152 --> 00:13:44.857
and then sold for $59 and 66 one cents,
giving us a four sound profit.

00:13:44.857 --> 00:13:47.860
And the part that you're probably waiting
for the Taylor Swift bottle

00:13:48.060 --> 00:13:48.994
here, the results of that.

00:13:48.994 --> 00:13:53.032
So we actually only ever bought two stocks
during our Taylor Swift bot run.

00:13:53.032 --> 00:13:56.368
I'm thinking maybe this was because
of the limited data from when the stocks

00:13:56.368 --> 00:13:59.638
were initially bought,
but the first one was Nuveen Global.

00:13:59.672 --> 00:14:04.310
Then this article called JT
stayed in the game with Nuveen Global High

00:14:04.310 --> 00:14:05.010
Income Fund.

00:14:05.010 --> 00:14:08.747
Somehow related to Stay beautiful,
Stay Beautiful from the song Stay

00:14:08.747 --> 00:14:11.750
Beautiful from the original Taylor Swift
album came up.

00:14:11.851 --> 00:14:13.919
Not sure why, but it went with it.

00:14:13.919 --> 00:14:17.723
So we ended up buying 101 shares at $11.22

00:14:17.823 --> 00:14:22.995
and then sold at $11.20,
which means that we lost $2.02.

00:14:23.062 --> 00:14:27.566
Then it randomly chose at X Corp
that leases railcars to companies.

00:14:27.666 --> 00:14:30.769
So again, from the album Taylor Swift,
it picked out the lyrics.

00:14:30.769 --> 00:14:35.374
When you think Tim McGraw from the song
Tim McGraw and then bought ten shares

00:14:35.374 --> 00:14:38.544
at $108.63 and then eventually

00:14:38.544 --> 00:14:41.714
sold at $110.87,

00:14:41.714 --> 00:14:45.317
giving us a profit of $22.45.

00:14:45.317 --> 00:14:46.151
That's right.

00:14:46.151 --> 00:14:48.554
We made money off this real money.

00:14:48.554 --> 00:14:54.193
So after all is said and done, all three
of our boss brought in a combined $109.35.

00:14:54.193 --> 00:14:56.395
This is from around 3 to 4 days of active

00:14:56.395 --> 00:15:00.499
trading and between 13 different stocks,
but not all happy.

00:15:00.499 --> 00:15:04.670
The $109.35 accounts
for commissions and fees included.

00:15:04.770 --> 00:15:08.307
But I also had to buy
a lot of subscriptions to access real time

00:15:08.307 --> 00:15:09.208
market data.

00:15:09.208 --> 00:15:13.846
So interactive brokers
automatically took $117.70 off.

00:15:13.846 --> 00:15:15.114
So if you actually want to include

00:15:15.114 --> 00:15:19.385
that in your portfolio,
we actually lost $8.35 by it.

00:15:28.421 --> 00:15:31.892
I can only get
because you keep tuning in to my YouTube

00:15:31.892 --> 00:15:35.896
shorts, my long form videos
and all my other socials.

00:15:35.896 --> 00:15:39.966
Coding with Lewis is my full time job
as well as well as full time job.

00:15:39.966 --> 00:15:41.234
Who helps out of these videos?

00:15:41.234 --> 00:15:44.004
And to me, that's just beyond insane.
So thank you.

00:15:44.004 --> 00:15:47.240
Thank you so much
for supporting me on my journey.

00:15:47.240 --> 00:15:49.476
We're planning a special event
in our Discord Channel,

00:15:49.476 --> 00:15:52.779
so make sure you check it out
in the description below to find out more.

00:15:52.779 --> 00:15:55.148
If you like videos like this
where I actually build things,

00:15:55.148 --> 00:15:58.618
then check out my Reddit bot
which builds those Reddit TikTok videos

00:15:58.618 --> 00:16:02.789
that you always see as well as my news
API bot that reports the news to you.

